<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:spring="http://www.springframework.org/schema/beans"
	xmlns:script="http://www.mulesource.org/schema/mule/scripting/2.2"
	xmlns:stdio="http://www.mulesource.org/schema/mule/stdio/2.2" xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
	xmlns:mappum="http://www.mulesource.org/schema/mule/mappum/2.2"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:http="http://www.mulesource.org/schema/mule/http/2.2"
	xsi:schemaLocation="
       http://www.mulesource.org/schema/mule/http/2.2 http://www.mulesource.org/schema/mule/http/2.2/mule-http.xsd
       http://www.mulesource.org/schema/mule/mappum/2.2 http://www.mulesource.org/schema/mule/mappum/2.2/mule-mappum.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.mulesource.org/schema/mule/scripting/2.2 http://www.mulesource.org/schema/mule/scripting/2.2/mule-scripting.xsd
       http://www.mulesource.org/schema/mule/stdio/2.2 http://www.mulesource.org/schema/mule/stdio/2.2/mule-stdio.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd">

	<description>
		This example demonstrates invoking a mappum transformation
		as the service component.
    </description>

	<!--
		Adds the default configuration for the 'mapFolder' and 'schemFolder'
		parameters below. Users can override these values by passing them as
		VM parameters i.e. -DmapFolder=/tmp/mappum/maps.
	-->
	<context:property-placeholder location="classpath:mappum-config.properties" />

	<!--
		The stdio connector is used to send and receive information via
		System.in and System.out. Note this connector is only really useful
		for testing purposes. promptMessage - is what is written to the
		console messageDelayTime - is the time in milliseconds before the user
		is prompted again. These properties are set as bean properties on the
		connector.
	-->
	<configuration defaultSynchronousEndpoints="true" />

	<stdio:connector name="SystemStreamConnector"
		promptMessage="Paste XML to be transformed" messageDelayTime="1000" />

	<model name="main">

		<service name="Mappum">

			<inbound>
				<stdio:inbound-endpoint system="IN" />

				<http:inbound-endpoint host="localhost" port="8888"
					path="services/Mappum" synchronous="true" keep-alive="true">
				</http:inbound-endpoint>

				<http:inbound-endpoint host="localhost" port="8899"
					path="services/Mappum/Address" synchronous="true" keep-alive="true">
					<message-properties-transformer>
						<add-message-property key="mapName" value="address" />
					</message-properties-transformer>
				</http:inbound-endpoint>

				<!-- For unit testing -->
				<vm:inbound-endpoint path="mappum" />
			</inbound>

			<mappum:component mapFolder="${mapFolder}"
				schemaFolder="${schemaFolder}">
			</mappum:component>

			<outbound>
				<chaining-router>
					<stdio:outbound-endpoint system="OUT" />
				</chaining-router>
			</outbound>

		</service>

	</model>


</mule>
